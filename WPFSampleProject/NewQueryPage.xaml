<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WPFSampleProject"
      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" 
      x:Class="WPFSampleProject.NewQueryPage"

      mc:Ignorable="d" 
      
      d:DesignHeight="500" 
      d:DesignWidth="600"
      
      Background="Transparent">

    <Page.Resources>
        <Style x:Key="comboBox_style" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MetroComboBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="FontFamily" Value="Chevin Cyrillic"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="#FFF"/>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MetroComboBoxItem}">
                        <Setter Property="Foreground" Value="#AAA"/>
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Border"
                                            Padding="2"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="#FFF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#37FFFFFF"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="#AAAAAA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.05*"/>
            <RowDefinition Height="0.9*"/>
            <RowDefinition Height="0.05*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.27*"/>
                <ColumnDefinition Width="0.46*" MinWidth="490"/>
                <ColumnDefinition Width="0.27*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" 
                  Background="#202C2C2C">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <ComboBox Grid.Row="0"  Name="DBList"
                          Custom:TextBoxHelper.Watermark="Select database..."
                          Style="{StaticResource comboBox_style}"
                          ItemsSource="{Binding DBList}"
                          DisplayMemberPath="Name"
                          SelectedValuePath="QueryList"                         
                          Margin="15,15,15,5"/>
                <ComboBox Grid.Row="1" Name="QueryList"
                          Visibility="Collapsed"
                          Custom:TextBoxHelper.Watermark="Select query..."
                          Style="{StaticResource comboBox_style}"
                          ItemsSource="{Binding}"
                          DisplayMemberPath="Name"
                          SelectedValuePath="Uri"
                          Margin="15,5">
                    <TextBlock></TextBlock>
                </ComboBox>

                <ScrollViewer Grid.Row="2"                              
                              Margin="19,20,13,10">
                    <ScrollViewer.Resources>
                        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Rectangle x:Name="rectangle" Fill="#CDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="rectangle" Value="#A6A6A6"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="rectangle" Value="#606060"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="RepeatButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid>
                                            <ContentPresenter></ContentPresenter>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                            <Setter Property="BorderThickness" Value="1,0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" Width="4" Margin="0,15,0,15" Background="Transparent" SnapsToDevicePixels="true">
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="0"/>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition Height="0"/>
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" Grid.Row="1"/>
                                            <RepeatButton Height="0" Width="0" x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}"/>
                                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" />
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" />
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton x:Name="PART_LineDownButton" Height="0" Width="0" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                                        <Grid x:Name="Grid"  HorizontalAlignment="Stretch">
                                            <ScrollContentPresenter   x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow"  Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ScrollViewer.Resources>
                    
                    <Frame Name="QueryFields"
                           Source="{Binding DataFields}"
                           Focusable="False"
                           Margin="40,1,30,1"
                           NavigationUIVisibility="Hidden"                           
                           JournalOwnership="UsesParentJournal"/>
                </ScrollViewer>

                <CheckBox Grid.Row="3" Name="SpecAccess"
                          Visibility="Collapsed"
                          Content="Include additional fields"
                          FontFamily="MagistralC"
                          FontWeight="SemiBold"
                          Foreground="#FFFFFF"
                          FontSize="13"
                          Background="Transparent"
                          HorizontalAlignment="Left"
                          VerticalContentAlignment="Center"
                          Margin="59,5">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                            <Setter Property="BorderBrush" Value="#FFF" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="#FFF" />
                            <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="#FFFFFF" />
                            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
                            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6 0 0 0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="CheckBox">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="LeftCol" Width="18" />
                                                <ColumnDefinition x:Name="RightCol" Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid x:Name="PART_CHECKBOX">
                                                <Rectangle Margin="-6, 0" Fill="{DynamicResource TransparentWhiteBrush}" />
                                                <Border x:Name="normal"
                                    Width="18"
                                    Height="18"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                                <Path x:Name="checkBox"
                                  Width="12"
                                  Height="10"
                                  Fill="#FFF"
                                  Opacity="0"
                                  Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                  Stretch="Fill"
                                  UseLayoutRounding="False" />
                                                <Rectangle x:Name="IndeterminateCheck"
                                       Width="8"
                                       Height="3"
                                       Fill="{DynamicResource GrayBrush3}"
                                       Opacity="0" />
                                                <Border x:Name="disabled"
                                    Width="18"
                                    Height="18"
                                    Background="{DynamicResource SemiTransparentWhiteBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0" />
                                            </Grid>
                                            <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To=".55" />
                                                            <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="disabled"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="checkBox"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked" />
                                                    <VisualState x:Name="Indeterminate">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                                                <Setter TargetName="normal" Property="Background" Value="#37FFFFFF"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="normal" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                            </Trigger>
                                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                                <Setter TargetName="checkBox" Property="LayoutTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="-1" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="Controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                                                <Setter Property="Padding" Value="0 0 6 0" />
                                                <Setter TargetName="LeftCol" Property="Width" Value="*" />
                                                <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
                                                <Setter TargetName="RightCol" Property="Width" Value="18" />
                                                <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>

                <Button Grid.Row="4" Name="ExecuteQueryBt"
                        Visibility="Collapsed"
                        Width="200"
                        Height="30"
                        Focusable="False"
                        HorizontalAlignment="Left"
                        Margin="15,20,0,15"
                        Content="EXECUTE QUERY">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="Background" Value="#37FFFFFF" />
                            <Setter Property="BorderBrush" Value="#FFFFFF" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="MinHeight" Value="25" />
                            <Setter Property="Padding" Value="5 6" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Mode=OneWay}" />
                                            <Border x:Name="Border"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Background" Property="Background" Value="#FFE0E0E0" />
                                                <Setter Property="Foreground" Value="#000000" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Background" Property="Background" Value="#FFD8D8D9" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                                                <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>

    </Grid>
</Page>
